basePath: /
definitions:
  bff.HealthResponse:
    properties:
      services:
        additionalProperties:
          type: string
        example:
          database: ok
        type: object
      status:
        example: ok
        type: string
      timestamp:
        example: "2025-07-10T15:47:08Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  models.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.CreateGameTableRequest:
    properties:
      name:
        maxLength: 100
        minLength: 3
        type: string
      system:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - name
    - system
    type: object
  models.CreateInviteRequest:
    properties:
      invitee_email:
        type: string
    required:
    - invitee_email
    type: object
  models.CreatePlayerSheetRequest:
    properties:
      data:
        $ref: '#/definitions/models.PlayerSheetData'
      name:
        maxLength: 100
        minLength: 3
        type: string
      table_id:
        type: string
      template_id:
        minimum: 1
        type: integer
    required:
    - name
    - table_id
    - template_id
    type: object
  models.CreateRollRequest:
    properties:
      expression:
        maxLength: 200
        type: string
      field_name:
        maxLength: 100
        type: string
      sheet_id:
        type: string
    required:
    - sheet_id
    type: object
  models.CreateSheetTemplateRequest:
    properties:
      definition:
        type: object
      description:
        example: Template completo para personagens de D&D 5ª edição
        maxLength: 500
        type: string
      name:
        example: Ficha D&D 5e
        maxLength: 100
        minLength: 3
        type: string
      system:
        example: D&D 5e
        maxLength: 50
        minLength: 2
        type: string
    required:
    - definition
    - name
    - system
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: Email já está em uso
        type: string
      message:
        example: Detalhes adicionais do erro
        type: string
    type: object
  models.GameTable:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        maxLength: 100
        minLength: 3
        type: string
      owner_id:
        type: integer
      system:
        maxLength: 50
        minLength: 2
        type: string
      updated_at:
        type: string
    required:
    - name
    - system
    type: object
  models.GameTableResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      invites:
        items:
          $ref: '#/definitions/models.InviteDetails'
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/models.UserResponse'
      owner_id:
        type: integer
      system:
        type: string
      updated_at:
        type: string
    type: object
  models.InviteDetails:
    properties:
      created_at:
        type: string
      id:
        type: string
      invitee:
        $ref: '#/definitions/models.UserResponse'
      invitee_id:
        type: integer
      inviter:
        $ref: '#/definitions/models.UserResponse'
      inviter_id:
        type: integer
      status:
        type: string
      table:
        $ref: '#/definitions/models.GameTable'
      table_id:
        type: string
      updated_at:
        type: string
    type: object
  models.PlayerSheetData:
    additionalProperties: true
    type: object
  models.PlayerSheetResponse:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/models.PlayerSheetData'
      id:
        type: string
      name:
        type: string
      owner:
        $ref: '#/definitions/models.UserResponse'
      owner_id:
        type: integer
      table_id:
        type: string
      template:
        $ref: '#/definitions/models.TemplateInfo'
      template_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.RollDetails:
    properties:
      critical:
        description: Se foi crítico
        type: boolean
      dice:
        description: Valores individuais dos dados
        items:
          type: integer
        type: array
      fumble:
        description: Se foi fumble
        type: boolean
      modifier:
        description: Modificador aplicado
        type: integer
      total:
        description: Resultado final
        type: integer
    type: object
  models.RollResponse:
    properties:
      created_at:
        type: string
      expression:
        type: string
      field_name:
        type: string
      id:
        type: string
      result_details:
        $ref: '#/definitions/models.RollDetails'
      result_value:
        type: integer
      sheet_id:
        type: string
      success:
        type: boolean
      table_id:
        type: string
      user:
        $ref: '#/definitions/models.UserResponse'
      user_id:
        type: integer
    type: object
  models.SheetTemplateErrorResponse:
    properties:
      error:
        example: Erro no processamento
        type: string
      fields:
        items:
          $ref: '#/definitions/models.SheetTemplateValidationError'
        type: array
      message:
        example: Detalhes adicionais do erro
        type: string
      timestamp:
        example: "2025-07-11T09:26:29Z"
        type: string
    type: object
  models.SheetTemplateListResponse:
    properties:
      has_next:
        example: true
        type: boolean
      limit:
        example: 20
        type: integer
      page:
        example: 1
        type: integer
      templates:
        items:
          $ref: '#/definitions/models.SheetTemplateResponse'
        type: array
      total:
        example: 25
        type: integer
    type: object
  models.SheetTemplateResponse:
    properties:
      created_at:
        example: "2025-07-11T09:26:29Z"
        type: string
      definition:
        type: object
      description:
        example: Template completo para personagens de D&D 5ª edição
        maxLength: 500
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      name:
        example: Ficha D&D 5e
        maxLength: 100
        minLength: 3
        type: string
      system:
        example: D&D 5e
        maxLength: 50
        minLength: 2
        type: string
      updated_at:
        example: "2025-07-11T09:26:29Z"
        type: string
    required:
    - definition
    - name
    - system
    type: object
  models.SheetTemplateValidationError:
    properties:
      field:
        example: name
        type: string
      message:
        example: Nome deve ter pelo menos 3 caracteres
        type: string
      value:
        example: ab
        type: string
    type: object
  models.TemplateInfo:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.UpdateGameTableRequest:
    properties:
      name:
        maxLength: 100
        minLength: 3
        type: string
      system:
        maxLength: 50
        minLength: 2
        type: string
    type: object
  models.UpdatePlayerSheetRequest:
    properties:
      data:
        $ref: '#/definitions/models.PlayerSheetData'
      name:
        maxLength: 100
        minLength: 3
        type: string
    type: object
  models.UpdateSheetTemplateRequest:
    properties:
      definition:
        type: object
      description:
        example: Template atualizado para D&D 5ª edição
        maxLength: 500
        type: string
      name:
        example: Ficha D&D 5e Atualizada
        maxLength: 100
        minLength: 3
        type: string
      system:
        example: D&D 5e
        maxLength: 50
        minLength: 2
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    required:
    - email
    type: object
  models.UserLoginRequest:
    properties:
      email:
        example: usuario@exemplo.com
        type: string
      password:
        example: senha123
        type: string
    required:
    - email
    - password
    type: object
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  models.UserSignupRequest:
    properties:
      email:
        example: usuario@exemplo.com
        type: string
      password:
        example: senha123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8080
info:
  contact:
    email: luiz@example.com
    name: Luiz de Queiroz
  description: API para gerenciamento de sessões de RPG, incluindo usuários, campanhas,
    personagens e sessões de jogo.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: RPG Session Backend API
  version: 1.0.0
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login realizado com sucesso
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Dados inválidos
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Credenciais inválidas
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login de usuário
      tags:
      - auth
  /api/v1/auth/me:
    get:
      consumes:
      - application/json
      description: Retorna as informações do usuário autenticado
      produces:
      - application/json
      responses:
        "200":
          description: Informações do usuário
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Token inválido ou ausente
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Usuário não encontrado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Informações do usuário atual
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Registra um novo usuário no sistema com email e senha
      parameters:
      - description: Dados de registro
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.UserSignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Dados inválidos
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Email já está em uso
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Registro de novo usuário
      tags:
      - auth
  /api/v1/rolls:
    post:
      consumes:
      - application/json
      description: Executa rolagem de dados baseada em expressão ou campo da ficha
      parameters:
      - description: Dados da rolagem
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateRollRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RollResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Rolar dados
      tags:
      - Player Sheets
  /api/v1/rolls/sheet/{sheetID}:
    get:
      description: Lista histórico de rolagens de uma ficha específica
      parameters:
      - description: ID da ficha
        in: path
        name: sheetID
        required: true
        type: string
      - default: 1
        description: Página
        in: query
        name: page
        type: integer
      - default: 20
        description: Itens por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar rolagens da ficha
      tags:
      - Player Sheets
  /api/v1/rolls/table/{tableID}:
    get:
      description: Lista histórico de rolagens de uma mesa
      parameters:
      - description: ID da mesa
        in: path
        name: tableID
        required: true
        type: string
      - default: 1
        description: Página
        in: query
        name: page
        type: integer
      - default: 20
        description: Itens por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar rolagens da mesa
      tags:
      - Player Sheets
  /api/v1/sheets:
    get:
      description: Lista todas as fichas de personagens de uma mesa
      parameters:
      - description: ID da mesa
        in: query
        name: table_id
        required: true
        type: string
      - default: 1
        description: Página
        in: query
        name: page
        type: integer
      - default: 20
        description: Itens por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar fichas da mesa
      tags:
      - Player Sheets
    post:
      consumes:
      - application/json
      description: Cria nova ficha de personagem em uma mesa
      parameters:
      - description: Dados da ficha
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreatePlayerSheetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PlayerSheetResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Criar ficha de personagem
      tags:
      - Player Sheets
  /api/v1/sheets/{id}:
    delete:
      description: Remove uma ficha de personagem
      parameters:
      - description: ID da ficha
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Remover ficha
      tags:
      - Player Sheets
    get:
      description: Busca ficha de personagem por ID
      parameters:
      - description: ID da ficha
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PlayerSheetResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Buscar ficha
      tags:
      - Player Sheets
    put:
      consumes:
      - application/json
      description: Atualiza dados de uma ficha de personagem
      parameters:
      - description: ID da ficha
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePlayerSheetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PlayerSheetResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar ficha
      tags:
      - Player Sheets
  /api/v1/tables:
    get:
      description: Lista todas as mesas onde o usuário é proprietário ou convidado
        aceito
      parameters:
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 20
        description: Itens por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de mesas
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Listar mesas do usuário
      tags:
      - GameTables
    post:
      consumes:
      - application/json
      description: Cria uma nova mesa de jogo. O usuário autenticado se torna o proprietário.
      parameters:
      - description: Dados da mesa
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateGameTableRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GameTableResponse'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Criar nova mesa de jogo
      tags:
      - GameTables
  /api/v1/tables/{id}:
    delete:
      description: Remove uma mesa permanentemente. Apenas o proprietário pode remover.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Mesa removida com sucesso
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Apenas proprietário pode remover
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Mesa não encontrada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Remover mesa
      tags:
      - GameTables
    get:
      description: Retorna detalhes de uma mesa específica, incluindo convites se
        o usuário for o proprietário
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameTableResponse'
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Acesso negado
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Mesa não encontrada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Buscar mesa por ID
      tags:
      - GameTables
    put:
      consumes:
      - application/json
      description: Atualiza nome e/ou sistema de uma mesa. Apenas o proprietário pode
        atualizar.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateGameTableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameTableResponse'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Apenas proprietário pode atualizar
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Mesa não encontrada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Atualizar mesa
      tags:
      - GameTables
  /api/v1/tables/{id}/invites:
    get:
      description: Lista todos os convites de uma mesa. Acessível pelo proprietário
        e convidados.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de convites
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Acesso negado
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Mesa não encontrada
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Listar convites da mesa
      tags:
      - GameTables
    post:
      consumes:
      - application/json
      description: Cria um convite para um usuário participar da mesa. Apenas o proprietário
        pode criar convites.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      - description: Email do usuário a ser convidado
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateInviteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.InviteDetails'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Apenas proprietário pode criar convites
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Mesa ou usuário não encontrado
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Convite já existe
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Criar convite para mesa
      tags:
      - GameTables
  /api/v1/tables/{id}/invites/{inviteId}/accept:
    post:
      description: Aceita um convite para participar da mesa. Apenas o convidado pode
        aceitar.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      - description: ID do convite
        in: path
        name: inviteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Convite aceito
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Apenas convidado pode aceitar
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Convite não encontrado
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Convite já respondido
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Aceitar convite
      tags:
      - GameTables
  /api/v1/tables/{id}/invites/{inviteId}/decline:
    post:
      description: Recusa um convite para participar da mesa. Apenas o convidado pode
        recusar.
      parameters:
      - description: ID da mesa
        in: path
        name: id
        required: true
        type: string
      - description: ID do convite
        in: path
        name: inviteId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Convite recusado
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Não autorizado
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Apenas convidado pode recusar
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Convite não encontrado
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Convite já respondido
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Recusar convite
      tags:
      - GameTables
  /api/v1/templates:
    get:
      consumes:
      - application/json
      description: Retorna uma lista paginada de todos os templates de ficha ativos
      parameters:
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 20
        description: Itens por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de templates
          schema:
            $ref: '#/definitions/models.SheetTemplateListResponse'
        "400":
          description: Parâmetros inválidos
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Lista templates de ficha
      tags:
      - templates
    post:
      consumes:
      - application/json
      description: Cria um novo template de ficha de personagem
      parameters:
      - description: Dados do template
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/models.CreateSheetTemplateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Template criado com sucesso
          schema:
            $ref: '#/definitions/models.SheetTemplateResponse'
        "400":
          description: Dados inválidos
          schema:
            $ref: '#/definitions/models.SheetTemplateErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Cria um novo template
      tags:
      - templates
  /api/v1/templates/{id}:
    delete:
      consumes:
      - application/json
      description: Remove um template de ficha (soft delete)
      parameters:
      - description: ID do template
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Template removido com sucesso
        "400":
          description: ID inválido
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Template não encontrado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Remove um template
      tags:
      - templates
    get:
      consumes:
      - application/json
      description: Retorna os detalhes de um template específico
      parameters:
      - description: ID do template
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Detalhes do template
          schema:
            $ref: '#/definitions/models.SheetTemplateResponse'
        "400":
          description: ID inválido
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Template não encontrado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Busca template por ID
      tags:
      - templates
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um template existente
      parameters:
      - description: ID do template
        in: path
        name: id
        required: true
        type: integer
      - description: Dados atualizados do template
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSheetTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Template atualizado com sucesso
          schema:
            $ref: '#/definitions/models.SheetTemplateResponse'
        "400":
          description: Dados inválidos
          schema:
            $ref: '#/definitions/models.SheetTemplateErrorResponse'
        "404":
          description: Template não encontrado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Atualiza um template
      tags:
      - templates
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Retorna uma lista de todos os usuários do sistema - versão pública
      produces:
      - application/json
      responses:
        "200":
          description: Lista de usuários
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Lista usuários (não protegido)
      tags:
      - users
  /api/v1/users/protected:
    get:
      consumes:
      - application/json
      description: Retorna uma lista de todos os usuários do sistema - versão com
        mais detalhes para usuários autenticados
      produces:
      - application/json
      responses:
        "200":
          description: Lista de usuários
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Não autorizado
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - Bearer: []
      summary: Lista usuários (protegido)
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: Verifica o status de saúde da API e seus serviços dependentes
      produces:
      - application/json
      responses:
        "200":
          description: API funcionando normalmente
          schema:
            $ref: '#/definitions/bff.HealthResponse'
        "503":
          description: API com problemas em algum serviço
          schema:
            $ref: '#/definitions/bff.HealthResponse'
      summary: Verificação de saúde da API
      tags:
      - health
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: 'Digite ''Bearer'' seguido do token JWT (ex: Bearer eyJhbGciOiJIUzI1...)'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
